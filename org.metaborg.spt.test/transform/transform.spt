module transform
language SPT-Interactive

fixture [[[
  module transform
  language MiniSQL

  fixture [[
    CREATE TABLE T(
      [[...]]
    );
  ]]

  [[[...]]]
]]]

test run transform on entire AST (positive) [[[
  test run transform on entire AST (positive) [[
    i int
  ]] transform "Print id" to Module([TableDef("T",[ColDef("i", INT())])])
]]] analysis succeeds

test run transform on entire AST (negative) [[[
  test run transform on entire AST (negative) [[
    i int
  ]] transform "Print id" to ColDef("i", INT())
]]] analysis fails

test to part of transform optional (positive) [[[
  test to part of transform optional (positive) [[
    i int
  ]] transform "Print 1 on parse"
]]] analysis succeeds

test output fragment not combined with fixture (positive) [[[
  test output fragment not combined with fixture (positive) [[
    i int
  ]] transform "Print id" to [[CREATE TABLE T(i int);]]
]]] analysis succeeds

test allow newlines in ATerm strings (positive) [[[
  test allow newlines in ATerm strings (positive) [[
    i int
  ]] transform "Newline String" to "<newline>
</newline>"
]]] analysis succeeds

test allow tuples in ATerms (positive) [[[
  test allow tuples in ATerms (positive) [[
    i int
  ]] transform "Return Tuple" to (1, 2)
]]] analysis succeeds

test allow tuples nested in ATerms (positive) [[[
  test allow tuples nested in ATerms (positive) [[
    i int
  ]] transform "Return Nested Tuple" to ColDef("i", (1, 2))
]]] analysis succeeds


